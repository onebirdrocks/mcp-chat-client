{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///Users/onebird/github/mcp-chat-client/lib/server-data.ts"],"sourcesContent":["import { readFile, access, readdir, stat } from 'fs/promises'\nimport { join } from 'path'\n\n// Types for server-side data\nexport interface ChatSession {\n  id: string\n  title: string\n  createdAt: string\n  updatedAt: string\n  messageCount: number\n  provider: string\n  model: string\n  tags: string[]\n  archived: boolean\n  totalTokens: number\n  estimatedCost: number\n}\n\nexport interface ChatHistoryStats {\n  totalSessions: number\n  totalMessages: number\n  totalTokensUsed: number\n  estimatedTotalCost: number\n  activeConnections: number\n  uptime: number\n  lastBackup?: string\n}\n\nexport interface ServerSettings {\n  llmProviders: Array<{\n    id: string\n    name: string\n    displayName: string\n    enabled: boolean\n    models: Array<{\n      id: string\n      name: string\n      displayName: string\n      supportsToolCalling: boolean\n    }>\n    status: 'connected' | 'disconnected' | 'error'\n  }>\n  mcpServers: Array<{\n    id: string\n    name: string\n    displayName: string\n    enabled: boolean\n    status: 'connected' | 'disconnected' | 'error' | 'connecting'\n    toolCount: number\n  }>\n  systemInfo: {\n    version: string\n    uptime: number\n    environment: string\n  }\n}\n\n/**\n * Server-side chat history data fetching\n * Reads chat sessions from the data directory\n */\nexport async function getChatHistory(): Promise<{\n  sessions: ChatSession[]\n  stats: ChatHistoryStats\n}> {\n  try {\n    const dataDir = join(process.cwd(), 'data', 'sessions')\n    \n    // Check if data directory exists\n    try {\n      await access(dataDir)\n    } catch {\n      // Return empty data if directory doesn't exist\n      return {\n        sessions: [],\n        stats: {\n          totalSessions: 0,\n          totalMessages: 0,\n          totalTokensUsed: 0,\n          estimatedTotalCost: 0,\n          activeConnections: 0,\n          uptime: process.uptime()\n        }\n      }\n    }\n    \n    // Read session files\n    const files = await readdir(dataDir)\n    const sessionFiles = files.filter(file => file.endsWith('.json'))\n    \n    const sessions: ChatSession[] = []\n    let totalMessages = 0\n    let totalTokens = 0\n    let totalCost = 0\n    \n    for (const file of sessionFiles) {\n      try {\n        const filePath = join(dataDir, file)\n        const fileContent = await readFile(filePath, 'utf-8')\n        const sessionData = JSON.parse(fileContent)\n        \n        // Extract session metadata\n        const session: ChatSession = {\n          id: sessionData.id || file.replace('.json', ''),\n          title: sessionData.title || 'Untitled Session',\n          createdAt: sessionData.createdAt || new Date().toISOString(),\n          updatedAt: sessionData.updatedAt || new Date().toISOString(),\n          messageCount: sessionData.messages?.length || 0,\n          provider: sessionData.provider || 'unknown',\n          model: sessionData.model || 'unknown',\n          tags: sessionData.tags || [],\n          archived: sessionData.archived || false,\n          totalTokens: sessionData.totalTokens || 0,\n          estimatedCost: sessionData.estimatedCost || 0\n        }\n        \n        sessions.push(session)\n        totalMessages += session.messageCount\n        totalTokens += session.totalTokens\n        totalCost += session.estimatedCost\n      } catch (error) {\n        console.warn(`Failed to read session file ${file}:`, error)\n      }\n    }\n    \n    // Sort sessions by update time (most recent first)\n    sessions.sort((a, b) => new Date(b.updatedAt).getTime() - new Date(a.updatedAt).getTime())\n    \n    const stats: ChatHistoryStats = {\n      totalSessions: sessions.length,\n      totalMessages,\n      totalTokensUsed: totalTokens,\n      estimatedTotalCost: totalCost,\n      activeConnections: 0, // Will be populated by connection manager\n      uptime: process.uptime()\n    }\n    \n    return { sessions, stats }\n  } catch (error) {\n    console.error('Failed to load chat history:', error)\n    return {\n      sessions: [],\n      stats: {\n        totalSessions: 0,\n        totalMessages: 0,\n        totalTokensUsed: 0,\n        estimatedTotalCost: 0,\n        activeConnections: 0,\n        uptime: process.uptime()\n      }\n    }\n  }\n}\n\n/**\n * Server-side settings data fetching\n * Reads configuration and status from various sources\n */\nexport async function getServerSettings(): Promise<ServerSettings> {\n  try {\n    // Read MCP configuration\n    const mcpConfigPath = join(process.cwd(), 'config', 'mcp.config.json')\n    let mcpServers: ServerSettings['mcpServers'] = []\n    \n    try {\n      const mcpConfigContent = await readFile(mcpConfigPath, 'utf-8')\n      const mcpConfig = JSON.parse(mcpConfigContent)\n      \n      if (mcpConfig.mcpServers) {\n        mcpServers = Object.entries(mcpConfig.mcpServers).map(([id, config]: [string, any]) => ({\n          id,\n          name: id,\n          displayName: config.displayName || id,\n          enabled: config.enabled !== false,\n          status: 'disconnected' as const, // Will be updated by connection manager\n          toolCount: 0 // Will be populated by tool discovery\n        }))\n      }\n    } catch (error) {\n      console.warn('Failed to read MCP configuration:', error)\n    }\n    \n    // Mock LLM providers (will be replaced with actual configuration reading)\n    const llmProviders: ServerSettings['llmProviders'] = [\n      {\n        id: 'openai',\n        name: 'openai',\n        displayName: 'OpenAI',\n        enabled: true,\n        models: [\n          {\n            id: 'gpt-4',\n            name: 'gpt-4',\n            displayName: 'GPT-4',\n            supportsToolCalling: true\n          },\n          {\n            id: 'gpt-3.5-turbo',\n            name: 'gpt-3.5-turbo',\n            displayName: 'GPT-3.5 Turbo',\n            supportsToolCalling: true\n          }\n        ],\n        status: 'connected'\n      },\n      {\n        id: 'deepseek',\n        name: 'deepseek',\n        displayName: 'DeepSeek',\n        enabled: false,\n        models: [\n          {\n            id: 'deepseek-chat',\n            name: 'deepseek-chat',\n            displayName: 'DeepSeek Chat',\n            supportsToolCalling: true\n          }\n        ],\n        status: 'disconnected'\n      },\n      {\n        id: 'openrouter',\n        name: 'openrouter',\n        displayName: 'OpenRouter',\n        enabled: false,\n        models: [\n          {\n            id: 'anthropic/claude-3-sonnet',\n            name: 'anthropic/claude-3-sonnet',\n            displayName: 'Claude 3 Sonnet',\n            supportsToolCalling: true\n          }\n        ],\n        status: 'error'\n      }\n    ]\n    \n    return {\n      llmProviders,\n      mcpServers,\n      systemInfo: {\n        version: process.env.npm_package_version || '1.0.0',\n        uptime: process.uptime(),\n        environment: process.env.NODE_ENV || 'development'\n      }\n    }\n  } catch (error) {\n    console.error('Failed to load server settings:', error)\n    return {\n      llmProviders: [],\n      mcpServers: [],\n      systemInfo: {\n        version: '1.0.0',\n        uptime: process.uptime(),\n        environment: process.env.NODE_ENV || 'development'\n      }\n    }\n  }\n}\n\n/**\n * Get recent chat sessions for quick access\n */\nexport async function getRecentSessions(limit: number = 5): Promise<ChatSession[]> {\n  const { sessions } = await getChatHistory()\n  return sessions.slice(0, limit)\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":["file:///Users/onebird/github/mcp-chat-client/app/page.tsx"],"sourcesContent":["import { Metadata } from 'next'\nimport Link from 'next/link'\nimport { getRecentSessions, getServerSettings } from '../lib/server-data'\nimport { detectLanguage } from '../lib/server-utils'\n\nexport const metadata: Metadata = {\n  title: 'Chat Interface',\n  description: 'Start a new conversation with AI models through MCP servers',\n}\n\nexport default async function HomePage() {\n  // Server-side data fetching\n  const [recentSessions, serverSettings, language] = await Promise.all([\n    getRecentSessions(3),\n    getServerSettings(),\n    detectLanguage()\n  ])\n  \n  // Count active providers\n  const activeProviders = serverSettings.llmProviders.filter(p => p.enabled && p.status === 'connected')\n  const activeMcpServers = serverSettings.mcpServers.filter(s => s.enabled && s.status === 'connected')\n  \n  // Localized text based on detected language\n  const text = language === 'zh' ? {\n    welcome: '欢迎使用 MCP Chat UI',\n    description: '一个安全的本地优先聊天界面，连接到您的模型上下文协议服务器，支持多个LLM提供商，具有明确的工具执行控制。',\n    startNewChat: '开始新聊天',\n    configureSettings: '配置设置',\n    recentSessions: '最近会话',\n    systemStatus: '系统状态',\n    activeProviders: '活跃提供商',\n    mcpServers: 'MCP 服务器',\n    securePrivate: '安全私密',\n    toolControl: '工具控制',\n    multiProvider: '多提供商'\n  } : {\n    welcome: 'Welcome to MCP Chat UI',\n    description: 'A secure, local-first chat interface that connects to your Model Context Protocol servers and supports multiple LLM providers with explicit tool execution control.',\n    startNewChat: 'Start New Chat',\n    configureSettings: 'Configure Settings',\n    recentSessions: 'Recent Sessions',\n    systemStatus: 'System Status',\n    activeProviders: 'Active Providers',\n    mcpServers: 'MCP Servers',\n    securePrivate: 'Secure & Private',\n    toolControl: 'Tool Control',\n    multiProvider: 'Multi-Provider'\n  }\n  return (\n    <div className=\"flex min-h-screen flex-col\">\n      {/* Header */}\n      <header className=\"border-b bg-card\">\n        <div className=\"container mx-auto px-4 py-4\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <h1 className=\"text-2xl font-bold text-foreground\">MCP Chat UI</h1>\n              <span className=\"text-sm text-muted-foreground\">\n                Model Context Protocol Chat Interface\n              </span>\n            </div>\n            <nav className=\"flex items-center space-x-4\">\n              <Link\n                href=\"/history\"\n                className=\"text-sm font-medium text-muted-foreground hover:text-foreground transition-colors\"\n              >\n                History\n              </Link>\n              <Link\n                href=\"/settings\"\n                className=\"text-sm font-medium text-muted-foreground hover:text-foreground transition-colors\"\n              >\n                Settings\n              </Link>\n            </nav>\n          </div>\n        </div>\n      </header>\n\n      {/* Main Content */}\n      <main className=\"flex-1 container mx-auto px-4 py-8\">\n        <div className=\"max-w-4xl mx-auto\">\n          {/* Welcome Section */}\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-4xl font-bold text-foreground mb-4\">\n              {text.welcome}\n            </h2>\n            <p className=\"text-lg text-muted-foreground mb-8 max-w-2xl mx-auto\">\n              {text.description}\n            </p>\n            \n            {/* System Status Indicators */}\n            <div className=\"flex items-center justify-center space-x-6 mt-6\">\n              <div className=\"flex items-center space-x-2\">\n                <div className={`w-3 h-3 rounded-full ${activeProviders.length > 0 ? 'bg-green-500' : 'bg-red-500'}`}></div>\n                <span className=\"text-sm text-muted-foreground\">\n                  {activeProviders.length} {text.activeProviders}\n                </span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <div className={`w-3 h-3 rounded-full ${activeMcpServers.length > 0 ? 'bg-green-500' : 'bg-yellow-500'}`}></div>\n                <span className=\"text-sm text-muted-foreground\">\n                  {activeMcpServers.length} {text.mcpServers}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          {/* Quick Start Section */}\n          <div className=\"grid md:grid-cols-2 gap-8 mb-12\">\n            <div className=\"bg-card border rounded-lg p-6\">\n              <h3 className=\"text-xl font-semibold mb-4\">{text.startNewChat}</h3>\n              <p className=\"text-muted-foreground mb-4\">\n                {language === 'zh' \n                  ? '与您配置的AI模型开始对话。从服务器上配置的可用提供商和模型中选择。'\n                  : 'Begin a conversation with your configured AI models. Choose from available providers and models configured on the server.'\n                }\n              </p>\n              <div className=\"mb-4\">\n                <div className=\"text-sm text-muted-foreground mb-2\">\n                  {language === 'zh' ? '可用提供商:' : 'Available Providers:'}\n                </div>\n                <div className=\"flex flex-wrap gap-2\">\n                  {activeProviders.map(provider => (\n                    <span key={provider.id} className=\"px-2 py-1 bg-primary/10 text-primary text-xs rounded\">\n                      {provider.displayName}\n                    </span>\n                  ))}\n                  {activeProviders.length === 0 && (\n                    <span className=\"px-2 py-1 bg-muted text-muted-foreground text-xs rounded\">\n                      {language === 'zh' ? '无可用提供商' : 'No providers available'}\n                    </span>\n                  )}\n                </div>\n              </div>\n              <Link\n                href=\"/chat\"\n                className={`inline-flex items-center justify-center rounded-md px-4 py-2 text-sm font-medium transition-colors ${\n                  activeProviders.length > 0 \n                    ? 'bg-primary text-primary-foreground hover:bg-primary/90' \n                    : 'bg-muted text-muted-foreground cursor-not-allowed'\n                }`}\n              >\n                {language === 'zh' ? '新建聊天会话' : 'New Chat Session'}\n              </Link>\n            </div>\n\n            <div className=\"bg-card border rounded-lg p-6\">\n              <h3 className=\"text-xl font-semibold mb-4\">{text.configureSettings}</h3>\n              <p className=\"text-muted-foreground mb-4\">\n                {language === 'zh'\n                  ? '管理您的LLM提供商、MCP服务器连接，并自定义您的聊天体验偏好。'\n                  : 'Manage your LLM providers, MCP server connections, and customize your chat experience preferences.'\n                }\n              </p>\n              <Link\n                href=\"/settings\"\n                className=\"inline-flex items-center justify-center rounded-md bg-secondary px-4 py-2 text-sm font-medium text-secondary-foreground hover:bg-secondary/80 transition-colors\"\n              >\n                {language === 'zh' ? '打开设置' : 'Open Settings'}\n              </Link>\n            </div>\n          </div>\n\n          {/* Recent Sessions Section */}\n          {recentSessions.length > 0 && (\n            <div className=\"mb-12\">\n              <div className=\"flex items-center justify-between mb-6\">\n                <h3 className=\"text-2xl font-semibold\">{text.recentSessions}</h3>\n                <Link\n                  href=\"/history\"\n                  className=\"text-sm text-primary hover:text-primary/80 transition-colors\"\n                >\n                  {language === 'zh' ? '查看全部' : 'View All'}\n                </Link>\n              </div>\n              <div className=\"grid gap-4\">\n                {recentSessions.map(session => (\n                  <div key={session.id} className=\"bg-card border rounded-lg p-4 hover:bg-muted/50 transition-colors\">\n                    <div className=\"flex items-start justify-between\">\n                      <div className=\"flex-1\">\n                        <h4 className=\"font-medium text-foreground mb-1\">{session.title}</h4>\n                        <div className=\"flex items-center space-x-4 text-sm text-muted-foreground\">\n                          <span>{session.provider} {session.model}</span>\n                          <span>•</span>\n                          <span>{session.messageCount} {language === 'zh' ? '条消息' : 'messages'}</span>\n                          <span>•</span>\n                          <span>{new Date(session.updatedAt).toLocaleDateString(language === 'zh' ? 'zh-CN' : 'en-US')}</span>\n                        </div>\n                      </div>\n                      <Link\n                        href={`/chat/${session.id}`}\n                        className=\"text-sm text-primary hover:text-primary/80 transition-colors\"\n                      >\n                        {language === 'zh' ? '继续' : 'Continue'}\n                      </Link>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Features Section */}\n          <div className=\"grid md:grid-cols-3 gap-6\">\n            <div className=\"text-center\">\n              <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                <svg className=\"w-6 h-6 text-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n                </svg>\n              </div>\n              <h4 className=\"font-semibold mb-2\">{text.securePrivate}</h4>\n              <p className=\"text-sm text-muted-foreground\">\n                {language === 'zh'\n                  ? '本地优先架构，具有加密API密钥存储，无外部数据传输。'\n                  : 'Local-first architecture with encrypted API key storage and no external data transmission.'\n                }\n              </p>\n            </div>\n\n            <div className=\"text-center\">\n              <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                <svg className=\"w-6 h-6 text-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                </svg>\n              </div>\n              <h4 className=\"font-semibold mb-2\">{text.toolControl}</h4>\n              <p className=\"text-sm text-muted-foreground\">\n                {language === 'zh'\n                  ? '所有MCP工具执行都需要明确确认，操作流程透明。'\n                  : 'Explicit confirmation required for all MCP tool executions with transparent operation flow.'\n                }\n              </p>\n            </div>\n\n            <div className=\"text-center\">\n              <div className=\"w-12 h-12 bg-primary/10 rounded-lg flex items-center justify-center mx-auto mb-4\">\n                <svg className=\"w-6 h-6 text-primary\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\" />\n                </svg>\n              </div>\n              <h4 className=\"font-semibold mb-2\">{text.multiProvider}</h4>\n              <p className=\"text-sm text-muted-foreground\">\n                {language === 'zh'\n                  ? '支持OpenAI、DeepSeek、OpenRouter等多个LLM提供商，统一界面。'\n                  : 'Support for OpenAI, DeepSeek, OpenRouter and other LLM providers with unified interface.'\n                }\n              </p>\n            </div>\n          </div>\n        </div>\n      </main>\n\n      {/* Footer */}\n      <footer className=\"border-t bg-card\">\n        <div className=\"container mx-auto px-4 py-4\">\n          <div className=\"text-center text-sm text-muted-foreground\">\n            <p>MCP Chat UI - A secure interface for Model Context Protocol servers</p>\n          </div>\n        </div>\n      </footer>\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}